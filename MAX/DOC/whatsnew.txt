Hat mar ideje elkezdeni irni, 3 het utan :-)

Amit eddig tud:
  - beolvassa a classdirectory es scene fileokat (.MAX/OLE2)
    berakja a node-kat egy nodes[] tombbe. Aminek ismerjuk
    a tartalmat azt beolvassa egy megfelelo strukturaba amire
    a node->data mutat. (ez van a readers/ alkonyvtarban)
  - olvashatoan dumpolja a kepernyore az egeszet
    (kommentek, formatum megadhato a classdef.txt-ben)
  - keyframer: kiszamolja a Node-k (Node!=node !!!) matrixat,
    figyelembe veve a tm-et (pivot) es a hierarchyt is.
    Tudja a PRS es a LookAt transformationt kezelni.
    (a LookAt csak akkor korrekt ha az axis=Z es flipaxis=OFF)
  - Tracks: beolvassa a linear/bezier/tcb floatot, vectort, colort,
    scale-t, es a TCB/Euler rotation key-eket.
  - a render.c az megjeleniti OpenGL-el a drotvazat, a 3dsmax
    altal letarolt wirecolor szinnel, edge flagek figyelembevetelevel.
    De csak akkor teszi ha Editable Mesh az object!

Ami kene surgosen:
  - getKey implementalasa (keyframing)
  - LookAt teljes tamogatasa
  - ScaleAxis tamogatasa
  - normalvektorok szamolasa
  - texturazas (coins.bmp rulez)
  - fenyszamolas
  - nehany object primitiv implementalasa teszteleshez (box,sphere,teapot...)

Na szoval valahol itt tartunk most.

MAX3D v0.5   2000.04.06.  by A'rpi
========================
- getKey, ezeket tudja mar:
  Linear float
  TCB float
  TCB position
  Bezier position - ez nem igazan jol muxik
  
MAX3D v0.6   2000.04.07.  by A'rpi
========================
- OLE2 lib, ez tud olyat hogy open/close OLE2 file, es
  az OLE2 darabjait nev szerint be tudja tolteni memoriaba (OLE2_Load)
- AFS v4.0 elkeszult. ami uj benne:
  - kisebb bugfixek
  - afsmangle.h (nem kell az afs_ a fuggvenynevek ele ha ezt includeolod)
  - OLE2 beepitve, uj:  afs_FILE* afs_open_OLE2(OLE2_File *of,char* olename);
  - feof() es fgets() implementacioja
- load_scene() atirva hogy 2 file-t kapjon parameterkent (classdir es scene,
  nekunk kell megnyitnunk es lezarnunk.)
- Render.c atirva hogy hasznalja az AFS4-et, es a .MAX filebol olvassa be
  a remek uj OLE2 fuggvenyek segitsegevel...

MAX3D v0.7   2000.04.08.  by A'rpi
========================
- Bezier POS mukodik!
  A bezier-hez kell 4 pont, a 2 vegpont es 2 controlpont
     A=key.value
     B=A+(dt/3)*key.out_tan
     D=keyn.value
     C=D+(dt/3)*keyn.in_tan
  (key es keyn kozott vagyunk, dt=keyn.frame-key.frame)
  ez nem 100% hogy jo, de latszolag mukodik...
- Quaternion rotation (TCB)
  Elegge nagy szivas volt. ismet. :(
  - loader szarul toltotte a quat-ot, nem wxyz hanem xyzw van tarolva!
  - a matrix_from_prs() inverz rot. matrixot csinalt, javitva
    (kerdes, hogy ezutan is mukodik-e majd a kamera...)
  - quat_slerpl() nem vette figyelembe a negativ elojelet -> a nagy
    (angle>180fok) forgatasok neha forditva mentek...
  => birdshow.max-et meg nem nyomja le jol :((((((
     bugzik a hierarchy?
     -> hierarchy mat_mul()-janal a 2 parameter csereje nagyjabol javitotta
     mar csak a laba van kicsit odebb, talan PIVOT gond???
     lehet, hogy a parent TM-jet nem kene beleszamolni?

MAX3D v0.71   2000.04.09.  by A'rpi
=========================
- Pivot fix (birdshow miatt)
  nem kell invertalni a tm_mat-ot!!!
- "Config" OLE2 objektum beolvasasa (lasd meg config.txt)
  Ebben van tarolva tobbek kozt a start/end/current frame es az FPS is.
- Integer ertekek is keyframelhetoek (kicsit hack, de muxik)
- TorusKnot implementalva!!!!! :-)
  Teljesen, twist, warp, etc..  meg a sides/segments-et is lehet keyframelni!
  Szamol normalt, es textura koordinatat is ha genUV==1.
  A MAXSDK3-ban levo knot.cpp-t hasznaltam fel, csak kisse megoptimalizaltam
  mert az nagyon szar volt...
- Render.c tud texturazni is (ofkoz COINS.BMP...) egyelore csak UV teszteleshez


MAX3D v0.8   2000.04.14.  by A'rpi
=========================
- DOC/sorrend.txt: arrol szol, milyen sorrendben kell implementalni/tesztelni
  az egyes modulokat, hogy mind hibatlan legyen.
  (azaz ne legyen csomo minden elbaszva egy korai tevedes (pl. rossz
  PRS matrix) miatt)
  A lenyege hogy minden ujabb tesztnel csak 1 uj hibatenyezot vigyunk be.
- ha nincs kamera akkor az origobol nez 0,0,-1 fele (azaz nincs szorzas
  cammat-al) tehat worldspace-t mutat camspace helyett
- Keyframer bugfix: nem kezelte azt az esetet amikor frame<firstkey.frame
- tesztelesek 1.:  (lasd. sorrend.txt)
  simple:
     - PRS/pos ok  (bezier pos mozgas)
     - PRS/rot ok  (X, Y, Z iranyban, de csak angle=-90/0/+90 fok)
     - PRS/scale ok  (XYZ, X-only Y-only XY-only Z-only)
  pivot:
     - pivot.pos -> PRS/rot ok
     - pivot.rot -> PRS/rot ok
     - pivot.scale -> PRS ok
  hierarchy:
     - inherited pos ok
     - inherited rot ok
     - inherited pos with parent.pivot.pos!=0 ok
     - inherited rot with parent.pivot.pos!=0 ok
     - inherited rot with parent.pivot.rot!=0 ok
     - inherited scale ok
     Megjegyzes: a Node.tm-et nem szabad orokolni! az mindig csak az
       adott Node-ra vonatkozik, a gyerekekre nem!!! Tehat ami oroklodik
       az a mat=parent.mat*orient es amivel szamolni kell az a mat*tm
- teszteles 2.  PRS camera
    - PRS camera (position & rotation) ok
    - keyframed (pos+rot) PRS camera ok

  igy jo:  cammat = inverse(camnode->mat)
    tehat normalisan invertalni kell a camera Node matrixot, nem csak
    a positiont, hanem a rotationt is!!! (tehat a mat_inverse_cam() NEM JO!)
    
    - PRS camera with pivot.pos ok
    - PRS camera with pivot.rot ok

  vigyazat! a pivot-ot a cameranal is figyelembe kell venni!
    tehat cammat = inverse(camnode->mat * camnode->tm)

- Class_Node strukturaba:  Matrix objmat
  gyakorlatilag objmat=mat*tm_mat
  tehat nem kirajzolaskor kell szorozgatni, es a camera matrix is 
  egyszerubben szamolhato igy:  cammat = inverse(camnode->objmat)
  A kirajzolashoz szukseges trmat = node->objmat*inverse(camnode->objmat)

- LookAt-es camera fixalva... eleg gaz, mert most 2-szer invertalja a
  matrixot. ki kene ezt valahogy vedeni...
  Esetleg kene egy flag a Node-ba, ahol a bitek megadjak melyik mezoket
  kell kiszamolni (cameranal nem kell a mat, ha nincs gyerek akkor se
  kell a mat, objectnel nem kell az inverz, targetnel nem kell az objmat
  de kell a pos...)  Bar ez nem megoldas, mert a pivot miatt ugyis kell
  a mat.
  !!! Meg mindig csak az axis=Z flip=OFF esetre muxik jol. :-(

- Rajottem miert bugzik a birdshow-ban a madar laba (belevag a talajba).
  Ott hasznaljak az INHERIT FLAGS-et, es az Y rotation ki van
  kapcsolva. Mi meg nem implementaltuk ezt se a regi se az uj engineben...

- Euler XYZ kijavitva, mostmar muxik jol. Ez most nem quat-ot hanem egybol
  matrix-ot szamol. Meg kell optimalizalni rajta!!!

MAX3D v0.81  2000.04.15.  by A'rpi
=========================
- Keyframer atteve keyframe alkonyvtarba. Atirtam hogy makrok es template-k
  epitsek fel, ne copy&paste&modify legyen az egesz.
  - TCB Rot-nal nem volt spline_ease
  - TCB Scale nem volt megirva
- Keyframer: uj controllerek:
  - Linear Pos
  - Linear Rot
  - Linear Scale
  - Smooth Rot (ez meg nincs szamolva, csak betoltve)
- Uj specialis controllerek:
  - Position XYZ
  - ScaleXYZ
  Mindkettohoz az uj Class_VectorXYZ tipust hasznalja. Az egesz a get.c-ben
  van lekezelve, igy barmihez hasznalhato (PRS,LookAt,PBlock)
- Bezier bugfix: az atirt keyframe.c-ben a beziernel mas volt a h[]
  elemeinek a sorrendje...

MAX3D v0.82  2000.04.16.  by A'rpi
=========================
- uj quat_from_euler(), ez mar vegre mukodik jol.
  atirva hogy az EulerXYZ-hez is ezt hasznalja, get.c kezeli le...

MAX3D v0.83  2000.04.26.  by A'rpi
=========================
- mesh koruli dolgok
  - Class_EditableMesh hleyett csak Mesh. kiveve ahol nem :)
  - 2 init_mesh() volt, fixalva
  - vertex strukturaba kerult tp es tn (transzformalt p es n)
  - face strukturaba n (facenormal) es D (distance from origo)
  - Mesh_Transform() - ez forgatja vertexeket es normalokat
  => birdshow.3ds tok jol nez ki
  Tomcat kuldott kalner.max-et, egyelore nem sok latszik belole.
  'Edit mesh'-t is implementalni kell!!!

################################################################################
RULEZ, a modifierek forrasa megvan a MAXSDK3-ban! (twist,taper,bend,skew etc...)
RULEZ az FFD modifier, nagyon durva objecteket lehet vele csinalni egyszeruen!
